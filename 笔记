1.微服务技术：
会有注册中心 配置中心
服务网关（请求路由，负载均衡）
服务集群
分布式缓存 分布式搜索  数据集
消息队列
分布式日志服务
系统监控链路追踪
2.持续集成：
用jenkins自动化部署微服务
基于docker打包形成镜像 基于k8s或rancher实现自动化部署
1+2：才是完整的微服务技术栈


单体项目耦合度高
分布式架构有利于服务升级（服务拆分粒度 集群维护 远程调用 健康状态...）

微服务是一种分布式架构方案：
单一职责 面向服务（对外暴露接口） 自治（团队 技术 数据 部署） 隔离性强


微服务技术公司：
dubbo（阿里）： 服务的远程调用 注册中心
springcloud：
springcloudAlibaba：


springcloud搞了整合，集成了各种微服务功能组件，基于springboot实现了这些组件的自动装配


springcloud用的版本要对应boot的用，不然会报错


服务拆分：
业务不同，数据库不同；微服务可以将自己的业务暴露为接口，供其他微服务调用

远程调用：
spring有提供一个
bean的注入只能在配置类，启动类有main有@springbootapplication本身也是配置类

eureka：
euraka-server
euraka-client:服务消费者，提供者
1.注册服务信息
2.拉取user-service信息
3.负载均衡
4.远程调用
（心跳续约，30s一次）

eureka作用：
1.消费者该如何获取服务提供者具体信息?
服务提供者启动时向eureka注册自己的信息
eureka保存这些信息
消费者根据服务名称向eureka拉取提供者信息
2.如果有多个服务提供者，消费者该如何选择?
服务消费者利用负载均衡算法，从服务列表中挑选一个
3.消费者如何感知服务提供者健康状态?
服务提供者会每隔30秒EurekaServer发送心跳请求，报告健康状态
eureka会更新记录服务列表信息，心跳不正常会被剔除
消费者就可以拉取到最新的信息


在Eureka架构中，微服务角色有两类:
1.EurekaServer:服务端，注册中心
记录服务信息
心跳监控
2.EurekaClient:客户端
2.1.Provider:服务提供者，例如案例中的user-service
注册自己的信息到EurekaServer
每隔30秒向EurekaServer发送心跳
2.2.consumer:服务消费者，例如案例中的order-service
根据服务名称从EurekaServer拉取服务列表
基于服务列表做负载均衡，选中一个微服务后发起远程调用


跨database没法做关联查询

搭建EurekaServer：
1．创建项目，引入spring-cloud-starter-netflix-eureka-server的依赖
2.编写启动类，添加@EnableEurekaServer注解
3．添加application.yml文件，编写下面的配置:


eureka也是一个微服务，在启动时会将自己也注册到eureka上。
为eureka集群做准备。

eureka网页服务实例列表里因为是win所以没显示ip而是主机名（down是挂掉 up是ok）


子工程的pom文件中没写版本：父工程已经写了

idea里springboot启动好后，点端口会自动跳到浏览器


一个服务可以有多个实例
以机房划分集群
引入集群概念：优先调用本地集群，防止跨集群调用延迟高

nacos服务分级存储：
服务：userservice
集群：深圳
实例：深圳机房某台部署了userservice的服务器

NacosRule优先本地集群，集群内随机，不是负载均衡

grep console插件，自己根据日志不同等级配色

根据权重负载均衡
实际部署中会出现这样的场景:
服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能好的机器承担更多的用户请求
Nacos提供了权重配置来控制访问频率，权重越大则访问频率越高


bootstrap.yml优先读取于application.yml


网关功能:
身份认证和权限校验
服务路由、负载均衡
请求限流

在SpringCloud中网关的实现包括两种:
gateway
zuul
Zuul是基于Servlet的实现，属于阻塞式编程。而SpringCloudGateway则是基于Spring5中提供的WebFlux，属于响应式编程的实现，具备更好的性能。


gateway 是前端工程 到 后台服务器之间的一个 对内网关
nginx是用户到 前端工程 的网关，对外网关

计算机硬件
内核
系统（ubuntu centos）
应用


feign性能优化：
连接池（默认的URLConnection不支持连接池，引入httpclient）
日志（用basic或null）


PredicateFactory的作用是什么?
读取用户定义的断言条件，对请求做出判断
Path=/user/**是什么含义?
路径是以/user开头的就认为是符合的
https://docs.spring.io/spring-cloud-gateway/docs/3.1.6/reference/html/#the-after-route-predicate-factory


